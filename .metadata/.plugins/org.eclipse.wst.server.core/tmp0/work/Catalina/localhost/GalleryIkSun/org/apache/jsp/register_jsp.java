/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-08-12 23:54:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>Insert title here</title>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		<div id=\"wrap\">\r\n");
      out.write("			<form method=\"post\" action=\"signUp\" name=\"frm\">\r\n");
      out.write("	            <h2>사이트 이용정보 입력</h2>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>ID:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"id\" placeholder=\"id를 입력하세요.\">\r\n");
      out.write("	                <input type=\"hidden\" name=\"reId\">\r\n");
      out.write("	                <input type=\"button\" value=\"중복확인\" onclick=\"idCheck()\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>비밀번호:</div>\r\n");
      out.write("	                <input type=\"password\" name=\"pw\" placeholder=\"비밀번호\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>비밀번호확인:</div>\r\n");
      out.write("	                <input type=\"password\" name=\"pw_confirm\" placeholder=\"비밀번호확인\">*\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <h2>개인정보입력(필수)</h2>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>이름:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"nm\" placeholder=\"이름\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            \r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>휴대폰번호:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"phone\" placeholder=\"휴대폰번호\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            \r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>E-mail:</div>\r\n");
      out.write("	                <input type=\"email\" name=\"email\" placeholder=\"E-mail\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>우편번호:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"post\" placeholder=\"우편번호\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            \r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>주소:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"address\" placeholder=\"주소\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            \r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>참고항목:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"postscript\" placeholder=\"참고항목\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            \r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>상세주소:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"address2\" placeholder=\"상세주소\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <h2>추가정보(선택)</h2>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>은행:</div>\r\n");
      out.write("	                <select name=\"bank\">\r\n");
      out.write("	                    <option value=\"산업은행\">산업은행</option>\r\n");
      out.write("	                    <option value=\"기업은행\">기업은행</option>\r\n");
      out.write("	                    <option value=\"수협\">수협</option>\r\n");
      out.write("	                    <option value=\"NH농협은행\">NH농협은행</option>\r\n");
      out.write("	                    <option value=\"한국수출입은행\">한국수출입은행</option>\r\n");
      out.write("	                    <option value=\"국민은행\">국민은행</option>\r\n");
      out.write("	                    <option value=\"신한은행\">신한은행</option>\r\n");
      out.write("	                    <option value=\"우리은행\">우리은행</option>\r\n");
      out.write("	                    <option value=\"SC제일은행\">SC제일은행</option>\r\n");
      out.write("	                    <option value=\"한국씨티은행\">한국씨티은행</option>\r\n");
      out.write("	                    <option value=\"하나은행\">하나은행</option>\r\n");
      out.write("	                    <option value=\"카카오뱅크\">카카오뱅크</option>\r\n");
      out.write("	                    <option value=\"토스뱅크\">토스뱅크</option>\r\n");
      out.write("	                    <option value=\"Standard Chartered\">Standard Chartered</option>\r\n");
      out.write("	                </select>\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>계좌번호:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"accountnumber\" placeholder=\"계좌번호\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>예금주:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"accountholder\" placeholder=\"예금주\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div>\r\n");
      out.write("	                <div>생년월일:</div>\r\n");
      out.write("	                <input type=\"text\" name=\"birth\" placeholder=\"생년월일(예시:830212)\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div>\r\n");
      out.write("	            	<div>회원종류:</div>\r\n");
      out.write("	            	<input type=\"radio\" name=\"user_type\" value=\"admin\">관리자\r\n");
      out.write("	            	<input type=\"radio\" name=\"user_type\" value=\"member\">일반회원\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <input type=\"submit\" name=\"action\" value=\"Cancel\">\r\n");
      out.write("	            <input type=\"submit\" name=\"action\" value=\"Sign up!\">\r\n");
      out.write("	        </form>\r\n");
      out.write("	       </div>\r\n");
      out.write("	       <script>\r\n");
      out.write("	       		function idCheck(){\r\n");
      out.write("	       			if(document.frm.id.value==\"\"){\r\n");
      out.write("	       				alert(\"아이디를 입력하세요.\");\r\n");
      out.write("	       				document.frm.id.focus();\r\n");
      out.write("	       			}\r\n");
      out.write("	       			var url=\"idCheck.do?id=\"+document.frm.id.value;\r\n");
      out.write("	       			var popupX=(window.screen.width/2) - (450/2);\r\n");
      out.write("	       			var popupY=(window.screen.height/2) - (200/2);\r\n");
      out.write("	       			window.open(url, \"_blank_1\", \"toolbar=no, menubar=no, width=450, height=200, left=\"+popupX+\", top=\"+popupY);\r\n");
      out.write("	       		}\r\n");
      out.write("	       </script>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
